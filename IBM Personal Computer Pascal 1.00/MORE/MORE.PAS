{ $LIST-}
{ $INCLUDE:'A:FILKQQ.INC'}
{ $INCLUDE:'A:FILUQQ.INC'}
{ $LIST+}

PROGRAM MORE(INPUT, OUTPUT);

USES FILUQQ,FILKQQ;

CONST TAB = 9;
CONST LF = 10;
CONST CR = 13;
CONST TAB_SIZE = 8; { default tab size? }
CONST DISPLAY_HEIGHT = 25;

TYPE TDATA = CHAR;
TYPE TFILE = FILE OF TDATA;
TYPE TBYTECHAR = RECORD
	CASE BOOLEAN OF
		TRUE: (C: CHAR);
		FALSE: (B: BYTE);
END;

FUNCTION GETCH: WORD; EXTERNAL;
FUNCTION GETVM: WORD; EXTERNAL;
PROCEDURE PROCESS_FILE(VAR INPUT_FILE: TFILE; VAR COLUMN_COUNT: BYTE); FORWARD;

VAR CMD_LINE: LSTRING(80);
	ERROR : WORD;

FUNCTION GET_COLUMN_COUNT: BYTE;
VAR
	VIDEO_MODE: WORD;
BEGIN
	VIDEO_MODE := GETVM;
	GET_COLUMN_COUNT := VIDEO_MODE DIV 256;
END;

FUNCTION GET_CHAR_CODE: BYTE;
VAR
	CHAR_CODE: WORD;
BEGIN
	CHAR_CODE := GETCH;
	GET_CHAR_CODE := CHAR_CODE MOD 256;
END;


PROCEDURE MAIN;
VAR
	COLUMN_COUNT: BYTE;
	INPUT_FILE: TFILE;
BEGIN
	COLUMN_COUNT := GET_COLUMN_COUNT;
	IF ((COLUMN_COUNT = 40) OR (COLUMN_COUNT = 80)) THEN
		BEGIN
			INPUT_FILE.TRAP := TRUE;
			ASSIGN(INPUT_FILE, CMD_LINE);
			RESET(INPUT_FILE);
			IF INPUT_FILE.ERRS = 0 THEN
				BEGIN
					PROCESS_FILE(INPUT_FILE, COLUMN_COUNT);
					CLOSE(INPUT_FILE);
				END
			ELSE
				WRITELN('Cannot open specified file, error=', INPUT_FILE.ERRS);
		END
	ELSE
		WRITELN('Unexpected column count', COLUMN_COUNT);
END;

PROCEDURE PROCESS_FILE;
VAR
	CURR_VAL: TBYTECHAR;
	LINE_COUNT: BYTE;
	TOTAL_LINE_COUNT: WORD;
	LINE_LENGTH: WORD;
	CHAR_CODE: BYTE;
	SHOULD_LOOP: BOOLEAN;
BEGIN
	LINE_LENGTH := 0;
	LINE_COUNT := 0;
	TOTAL_LINE_COUNT := 0;
	SHOULD_LOOP := TRUE;

	WHILE (SHOULD_LOOP AND (NOT EOF(INPUT_FILE))) DO
	BEGIN
		CURR_VAL.C := INPUT_FILE^;
		IF CURR_VAL.B <> TAB THEN
			BEGIN
				WRITE(CURR_VAL.C);
				LINE_LENGTH := LINE_LENGTH + 1;
			END
		ELSE
			BEGIN
				REPEAT
					WRITE(' ');
					LINE_LENGTH := LINE_LENGTH + 1;
				UNTIL ((LINE_LENGTH >= COLUMN_COUNT) OR (LINE_LENGTH MOD TAB_SIZE = 0));
			END;

		IF CURR_VAL.B = LF THEN
			TOTAL_LINE_COUNT := TOTAL_LINE_COUNT + 1;

		IF ((CURR_VAL.B = LF) OR (LINE_LENGTH >= COLUMN_COUNT)) THEN
			BEGIN
				LINE_COUNT := LINE_COUNT + 1;
				LINE_LENGTH := 0;

				IF LINE_COUNT = (DISPLAY_HEIGHT - 1) THEN
					BEGIN
						CHAR_CODE := GET_CHAR_CODE;
						IF CHAR_CODE = 27 THEN
							SHOULD_LOOP := FALSE;

						LINE_COUNT := 0;
					END;
			END;

		GET(INPUT_FILE);
	END;
	{
		WRITELN;
		WRITELN('Lines ', TOTAL_LINE_COUNT);
	}
END;

BEGIN
	CMD_LINE := NULL;
	ERROR := PPMUQQ(0, ADR NULL, CMD_LINE);
	IF CMD_LINE = NULL THEN
		BEGIN
			WRITELN('MORE.EXE filename');
		END
	ELSE
		BEGIN
			MAIN;
		END;
END.
